package main

import (
	"fmt"
	"sync"
)

/*
Дана последовательность чисел: 2,4,6,8,10. Найти сумму их
квадратов(2^2+3^2+4^2….) с использованием конкурентных вычислений.

-------------------------------------------------------------------

Первый вариант - использование Mutex для гарантии, что
только одна горутина имеет доступ к ресурсу в определенный
момент времени(Делаем так, что бы несколько горутин не могли
одновременно считывать и записывать данные)
*/
func main() {
	var mu sync.Mutex
	var wg sync.WaitGroup
	// Переменная для накопления суммы
	sum := 0
	// Массив последовательности чисел из дано
	mas := [5]int{2, 4, 6, 8, 10}
	for _, val := range mas {
		// Перед запуском горутины увеличиваем счетчик ожидания на 1
		wg.Add(1)
		go func(val int) {
			// Указываем, что после выполнения горутины счетчик уменьшается на 1
			defer wg.Done()
			mu.Lock() // Блокируем мьютех
			sum += val * val
			mu.Unlock() // Освобождаем мьютех
		}(val) // Вызов горутины с переменной val
	}
	// Wait() дожидается выполнения всех горутин по счетчику
	wg.Wait()
	fmt.Println(sum) // sum = 220

}
